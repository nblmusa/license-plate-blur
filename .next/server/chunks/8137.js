"use strict";exports.id=8137,exports.ids=[8137],exports.modules={48137:(e,t,a)=>{a.d(t,{Q:()=>s});var r=a(9885),i=a(87502);function s(){let[e,t]=(0,r.useState)(!0),[a,s]=(0,r.useState)({imagesProcessed:0,monthlyQuota:100,lastUploadTime:null,detectedPlates:0}),[o,n]=(0,r.useState)([]),[l,c]=(0,r.useState)(null),[d,u]=(0,r.useState)(!1),[y,p]=(0,r.useState)(null),[h,k]=(0,r.useState)(null),{toast:w}=(0,i.pm)(),m=(0,r.useCallback)(async()=>{t(!0);try{let e=await fetch("/api/dashboard"),t=await e.json();if(!e.ok)throw Error(t.error||"Failed to fetch dashboard data");s({imagesProcessed:t.stats?.images_processed||0,monthlyQuota:t.stats?.monthly_quota||100,lastUploadTime:t.stats?.last_upload_time,detectedPlates:t.stats?.detected_plates||0}),n((t.recentActivity||[]).map(e=>({id:e.id,filename:e.filename,processedAt:e.processed_at,licensePlatesDetected:e.license_plates_detected,thumbnailUrl:e.thumbnail_url,processedUrl:e.processed_url}))),t.apiKey&&c(t.apiKey.key)}catch(e){console.error("Error fetching dashboard data:",e),w({title:"Error",description:"Failed to load dashboard data",variant:"destructive"})}finally{t(!1)}},[w]),f=(0,r.useCallback)(async()=>{try{let e=await fetch("/api/auth/session",{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"});if(!e.ok){if(401===e.status){u(!1),p(null);return}throw Error("Failed to check authentication")}let t=await e.json(),a=t.session;u(!!a),a?.user?(p({id:a.user.id,email:a.user.email,user_metadata:a.user.user_metadata}),m()):p(null)}catch(e){console.error("Auth error:",e),w({title:"Authentication Error",description:"Failed to verify authentication status",variant:"destructive"}),u(!1),p(null)}},[m,w]);(0,r.useEffect)(()=>{f()},[f]);let v=async()=>new Promise((e,t)=>{k({isOpen:!0,title:"Generate New API Key",description:"Warning: Generating a new API key will invalidate your existing key. Any applications or scripts using the current key will stop working. Are you sure you want to continue?",variant:"warning",onConfirm:async()=>{try{let t=await fetch("/api/dashboard/api-key",{method:"POST"}),a=await t.json();if(!t.ok)throw Error(a.error||"Failed to generate API key");c(a.apiKey.key),w({title:"Success",description:"New API key generated successfully. Make sure to copy it now - you won't be able to see it again."}),k(null),e(a.apiKey.key)}catch(e){console.error("Error generating API key:",e),w({title:"Error",description:"Failed to generate new API key",variant:"destructive"}),k(null),t(e)}}})}),A=async()=>new Promise((e,t)=>{k({isOpen:!0,title:"Revoke API Key",description:"Warning: This will permanently revoke your API key. Any applications or scripts using this key will stop working immediately. Are you sure you want to continue?",variant:"danger",onConfirm:async()=>{try{let t=await fetch("/api/dashboard/api-key",{method:"DELETE"});if(!t.ok){let e=await t.json();throw Error(e.error||"Failed to revoke API key")}c(null),w({title:"Success",description:"API key has been revoked successfully"}),k(null),e(!0)}catch(e){console.error("Error revoking API key:",e),w({title:"Error",description:"Failed to revoke API key",variant:"destructive"}),k(null),t(e)}}})}),g=async()=>{if(l)try{await navigator.clipboard.writeText(l),w({title:"Success",description:"API key copied to clipboard"})}catch(e){w({title:"Error",description:"Failed to copy API key",variant:"destructive"})}};return{isLoading:e,stats:a,recentActivity:o,apiKey:l,isAuthenticated:d,user:y,generateNewApiKey:v,revokeApiKey:A,copyApiKey:g,refreshData:m,alertState:h,closeAlert:()=>{k(null)}}}}};